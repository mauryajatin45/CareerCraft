<%- layout('layouts/boilerplate') %>

<head>
  <meta charset="UTF-8">
  <title>Skill Assessment UI</title>
  <style>
    .suggestions {
      border: 1px solid #ccc;
      max-height: 150px;
      overflow-y: auto;
      position: absolute;
      background-color: white;
      z-index: 1000;
      width: 100%;
    }

    .suggestion-item {
      padding: 5px 10px;
      cursor: pointer;
    }

    .suggestion-item:hover {
      background-color: #f0f0f0;
    }

    .autocomplete-wrapper {
      position: relative;
    }
  </style>
</head>
<body>

  <!-- Main Section -->
  <div class="container mt-5">
    <h3 class="text-center mb-4">Skill Assessment !!!</h3>

    <div class="card p-4">
      <form id="skillAssessmentForm">
        <!-- Programming Languages Autocomplete -->
        <div class="mb-3 autocomplete-wrapper">
          <label for="languageInput" class="form-label">Programming Languages</label>
          <input type="text" class="form-control" id="languageInput" placeholder="e.g. Python, JavaScript, Java">
          <div id="languageSuggestions" class="suggestions"></div>
        </div>

        <!-- Tools / Software Autocomplete -->
        <div class="mb-3 autocomplete-wrapper">
          <label for="toolsInput" class="form-label">Tools / Software</label>
          <input type="text" class="form-control" id="toolsInput" placeholder="e.g. Git, VS Code, Docker">
          <div id="toolsSuggestions" class="suggestions"></div>
        </div>

        <!-- Soft Skills Dropdown -->
        <div class="mb-3">
          <label for="softSkillsSelect" class="form-label">Soft Skills</label>
          <select class="form-select" id="softSkillsSelect">
            <option selected disabled>Select a soft skill...</option>
            <option value="communication">Communication</option>
            <option value="teamwork">Teamwork</option>
            <option value="problem-solving">Problem-solving</option>
            <option value="adaptability">Adaptability</option>
            <option value="leadership">Leadership</option>
          </select>
        </div>

        <!-- Proceed Button -->
        <div class="text-center">
          <button type="submit" class="btn btn-primary">Proceed</button>
        </div>
      </form>
    </div>

  <script>
    // Example suggestion arrays â€“ replace these with your own
    const languageOptions = [
      "Python", "JavaScript", "Java", "C", "C++", "C#", "Go", "Rust", "Ruby", "PHP",
      "TypeScript", "Swift", "Kotlin", "Perl", "Scala", "Objective-C", "R", "MATLAB",
      "Dart", "Haskell", "Elixir", "Lua", "Visual Basic", "Assembly", "Fortran", "COBOL",
      "F#", "Groovy", "Erlang", "Julia", "Shell", "SQL", "SAS", "VB.NET", "Ada", "Lisp",
      "Prolog", "Scheme", "OCaml", "Crystal", "Bash", "PowerShell", "Delphi", "Hack",
      "Nim", "Zig", "VHDL", "Verilog", "ABAP", "ActionScript", "Apex", "Awk", "Ballerina",
      "Elm", "Factor", "Forth", "GAMS", "Idris", "Io", "J", "LabVIEW", "Mercury", "Modula-2",
      "NATURAL", "Nimrod", "PL/I", "PL/SQL", "PostScript", "Racket", "REXX", "Smalltalk",
      "SPARK", "Tcl", "Vala", "VimL", "Xojo", "Yorick"
    ];

    const toolOptions = [
      "Git", "GitHub", "GitLab", "Bitbucket", "VS Code", "Visual Studio", "Eclipse",
      "IntelliJ IDEA", "PyCharm", "NetBeans", "Xcode", "Android Studio", "Jupyter",
      "Docker", "Kubernetes", "Postman", "Figma", "Slack", "Jira", "Trello", "Asana",
      "CircleCI", "Travis CI", "Jenkins", "TeamCity", "Gradle", "Maven", "Ant", "Selenium",
      "Cypress", "TestNG", "JUnit", "NUnit", "Mocha", "Chai", "Webpack", "Babel", "ESLint",
      "Prettier", "SonarQube", "New Relic", "Datadog", "Splunk", "Nagios", "Prometheus",
      "Grafana", "AWS", "Azure", "Google Cloud Platform", "Heroku", "Firebase", "DigitalOcean",
      "Linode", "Vagrant", "Ansible", "Chef", "Puppet", "Terraform", "OpenShift", "Bitrise",
      "Fastlane", "Appium", "Robot Framework", "Cucumber", "Swagger", "Kibana", "Logstash",
      "ElasticSearch", "Tableau", "Power BI", "QlikView", "Looker", "DBeaver", "MySQL Workbench",
      "pgAdmin", "MongoDB Compass", "RStudio", "Spyder", "Atom", "Sublime Text", "Notepad++",
      "Emacs", "Vim", "Code::Blocks", "BlueJ", "DrJava", "JDeveloper", "Qt Creator", "RubyMine",
      "CLion", "WebStorm", "PhpStorm", "DataGrip", "Rider", "AppCode", "Komodo IDE", "Zend Studio"
    ];

    function setupAutocomplete(inputId, suggestionBoxId, options) {
      const input = document.getElementById(inputId);
      const suggestionBox = document.getElementById(suggestionBoxId);

      input.addEventListener("input", () => {
        const value = input.value;
        const terms = value.split(/,\s*/);
        const lastTerm = terms[terms.length - 1].toLowerCase();

        // Clear suggestions
        suggestionBox.innerHTML = "";

        if (!lastTerm) return;

        const filtered = options.filter(option =>
          option.toLowerCase().startsWith(lastTerm)
        );

        filtered.forEach(item => {
          const div = document.createElement("div");
          div.className = "suggestion-item";
          div.textContent = item;
          div.onclick = () => {
            terms[terms.length - 1] = item;
            input.value = terms.join(", ") + ", ";
            suggestionBox.innerHTML = "";
          };
          suggestionBox.appendChild(div);
        });
      });

      document.addEventListener("click", (e) => {
        if (!suggestionBox.contains(e.target) && e.target !== input) {
          suggestionBox.innerHTML = "";
        }
      });
    }

    setupAutocomplete("languageInput", "languageSuggestions", languageOptions);
    setupAutocomplete("toolsInput", "toolsSuggestions", toolOptions);

    // Handle form submission
    // Handle form submission
const form = document.getElementById("skillAssessmentForm");
form.addEventListener("submit", async (e) => {
  e.preventDefault();  // Prevent form from reloading the page

  const languages = document.getElementById("languageInput").value.split(",").map(item => item.trim());
  const tools = document.getElementById("toolsInput").value.split(",").map(item => item.trim());
  const softSkills = document.getElementById("softSkillsSelect").value;

  // Log data being sent
  console.log("Languages: ", languages);
  console.log("Tools: ", tools);
  console.log("Soft Skills: ", softSkills);

  // Send data to the server
  try {
    const response = await fetch('/update-skill-assessment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        languages,
        tools,
        softSkills
      })
    });

    const result = await response.json();
    if (result.success) {
      alert("Profile updated successfully");
    } else {
      alert("Failed to update profile");
    }
  } catch (error) {
    console.error("Error updating profile:", error);
    alert("An error occurred while updating the profile");
  }
});

  </script>
</body>
